{"ast":null,"code":"import _regeneratorRuntime from\"/Users/katerina/starWars/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/katerina/starWars/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/katerina/starWars/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/katerina/starWars/node_modules/@babel/runtime/helpers/esm/createClass.js\";var SwapiService=/*#__PURE__*/function(){function SwapiService(){var _this=this;_classCallCheck(this,SwapiService);this._apiBase='https://swapi.dev/api';this._extractId=function(item){var idRegExp=/\\/([0-9]*)\\/$/;var id=planet.url.match(idRegExp)[1];};this._transformPlanet=function(planet){return{id:_this._extractId(planet),name:planet.name,population:planet.population,rotationPeriod:planet.rotation_period,diameter:planet.diameter};};this._transformStarship=function(starship){return{id:_this._extractId(starship),name:starship.name,model:starship.model,manufacturer:starship.manufacturer,costInCredits:starship.costInCredits,length:starship.length,crew:starship.crew,passengers:starship.passengers,cargoCapacity:starship.cargoCapacity};};this._transformPerson=function(person){return{id:_this._extractId(person),name:person.name,gender:person.gender,birthYear:person.birthYear,eyeColor:person.eyeColor};};}_createClass(SwapiService,[{key:\"getResource\",value:function(){var _getResource=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(url){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(this._apiBase).concat(url));case 2:res=_context.sent;if(res.ok){_context.next=5;break;}throw new Error(\"Could not fetch \".concat(url)+\", received \".concat(res.status));case 5:_context.next=7;return res.json();case 7:return _context.abrupt(\"return\",_context.sent);case 8:case\"end\":return _context.stop();}},_callee,this);}));function getResource(_x){return _getResource.apply(this,arguments);}return getResource;}()},{key:\"getAllPeople\",value:function(){var _getAllPeople=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return this.getResource(\"/people/\");case 2:res=_context2.sent;return _context2.abrupt(\"return\",res.results.map(this._transformPerson));case 4:case\"end\":return _context2.stop();}},_callee2,this);}));function getAllPeople(){return _getAllPeople.apply(this,arguments);}return getAllPeople;}()},{key:\"getPerson\",value:function(){var _getPerson=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id){var person;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.getResource(\"/people/\".concat(id,\"/\"));case 2:person=_context3.sent;return _context3.abrupt(\"return\",this._transformPerson(person));case 4:case\"end\":return _context3.stop();}},_callee3,this);}));function getPerson(_x2){return _getPerson.apply(this,arguments);}return getPerson;}()},{key:\"getAllPlanets\",value:function(){var _getAllPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var res;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return this.getResource(\"/planets/\");case 2:res=_context4.sent;return _context4.abrupt(\"return\",res.results.map(this._transformPlanet));case 4:case\"end\":return _context4.stop();}},_callee4,this);}));function getAllPlanets(){return _getAllPlanets.apply(this,arguments);}return getAllPlanets;}()},{key:\"getPlanet\",value:function(){var _getPlanet=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(id){var planet;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.next=2;return this.getResource(\"/planets/\".concat(id,\"/\"));case 2:planet=_context5.sent;return _context5.abrupt(\"return\",this._transformPlanet(planet));case 4:case\"end\":return _context5.stop();}},_callee5,this);}));function getPlanet(_x3){return _getPlanet.apply(this,arguments);}return getPlanet;}()},{key:\"getAllStarships\",value:function(){var _getAllStarships=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(){var res;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.next=2;return this.getResource(\"/starships/\");case 2:res=_context6.sent;return _context6.abrupt(\"return\",res.results.map(this._transformStarship));case 4:case\"end\":return _context6.stop();}},_callee6,this);}));function getAllStarships(){return _getAllStarships.apply(this,arguments);}return getAllStarships;}()},{key:\"getStarship\",value:function(){var _getStarship=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(id){var starship;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:starship=this.getResource(\"/starships/\".concat(id,\"/\"));return _context7.abrupt(\"return\",this._transformStarship(starship));case 2:case\"end\":return _context7.stop();}},_callee7,this);}));function getStarship(_x4){return _getStarship.apply(this,arguments);}return getStarship;}()}]);return SwapiService;}();export{SwapiService as default};var swapi=new SwapiService();swapi.getPerson(3).then(function(p){console.log(p.name);});","map":{"version":3,"names":["SwapiService","_apiBase","_extractId","item","idRegExp","id","planet","url","match","_transformPlanet","name","population","rotationPeriod","rotation_period","diameter","_transformStarship","starship","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","_transformPerson","person","gender","birthYear","eyeColor","fetch","res","ok","Error","status","json","getResource","results","map","swapi","getPerson","then","p","console","log"],"sources":["/Users/katerina/starWars/src/services/swapi-service.js"],"sourcesContent":["\nexport default class SwapiService {\n\n_apiBase = 'https://swapi.dev/api';\n\n    async getResource(url) {\n       \n    const res = await fetch(`${this._apiBase}${url}`);\n   \n    if (!res.ok) {\n        throw new Error(`Could not fetch ${url}` + `, received ${res.status}`\n        )}\n        return await res.json(); \n}\n\n    async getAllPeople() {\n       const res = await this.getResource(`/people/`);\n       return res.results.map(this._transformPerson)\n    }\n    async getPerson(id) {\n       const person = await this.getResource(`/people/${id}/`);\n       return this._transformPerson(person);\n    }\n\n    async getAllPlanets() {\n       const res = await this.getResource(`/planets/`);\n       return res.results.map(this._transformPlanet);\n    }\n    async getPlanet(id) {\n       const planet = await this.getResource(`/planets/${id}/`);\n       return this._transformPlanet(planet)\n    }\n\n    async getAllStarships() {\n       const res = await this.getResource(`/starships/`);\n       return res.results.map(this._transformStarship);\n    }\n    async getStarship(id) {\n        const starship = this.getResource(`/starships/${id}/`);\n        return this._transformStarship(starship);\n    }\n\n    _extractId = (item) => {\n\n        const idRegExp = /\\/([0-9]*)\\/$/;\n        const id = planet.url.match(idRegExp)[1];\n    }\n\n    _transformPlanet = (planet) => {\n        \n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter \n        }\n    }\n\n    _transformStarship = (starship) => {\n            return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.costInCredits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargoCapacity\n        }\n    }\n\n    _transformPerson = (person) => {\n            return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birthYear,\n            eyeColor: person.eyeColor,\n        }\n    }\n}\n\nconst swapi = new SwapiService();\n\nswapi.getPerson(3).then((p) => {\n    \n        console.log(p.name);\n})\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}