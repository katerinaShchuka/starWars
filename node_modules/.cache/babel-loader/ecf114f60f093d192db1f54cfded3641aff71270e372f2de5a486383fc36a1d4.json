{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.dev/api';\n    this.getResource = async url => {\n      const res = await fetch(`${this._apiBase}${url}`);\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}` + `, received ${res.status}`);\n      }\n      return await res.json();\n    };\n    this.getAllPeople = async () => {\n      const res = await this.getResource(`/people/`);\n      return res.results.map(this._transformPerson);\n    };\n    this.getPerson = async id => {\n      const person = await this.getResource(`/people/${id}/`);\n      return this._transformPerson(person);\n    };\n    this.getAllPlanets = async () => {\n      const res = await this.getResource(`/planets/`);\n      return res.results.map(this._transformPlanet);\n    };\n    this.getPlanet = async id => {\n      const planet = await this.getResource(`/planets/${id}/`);\n      return this._transformPlanet(planet);\n    };\n    this.getAllStarships = async () => {\n      const res = await this.getResource(`/starships/`);\n      return res.results.map(this._transformStarship);\n    };\n    this.getStarship = async id => {\n      const starship = this.getResource(`/starships/${id}/`);\n      return this._transformStarship(starship);\n    };\n    this._extractId = planet => {\n      const idRegExp = /\\/([0-9]*)\\/$/;\n      const id = planet.url.match(idRegExp)[1];\n    };\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.costInCredits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapacity: starship.cargoCapacity\n      };\n    };\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birthYear,\n        eyeColor: person.eyeColor\n      };\n    };\n  }\n}\nconst swapi = new SwapiService();\nswapi.getPerson(3).then(p => {\n  console.log(p.name);\n});","map":{"version":3,"names":["SwapiService","_apiBase","getResource","url","res","fetch","ok","Error","status","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","_extractId","idRegExp","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","eyeColor","swapi","then","p","console","log"],"sources":["/Users/katerina/starWars/src/components/services/swapi-service.js"],"sourcesContent":["\nexport default class SwapiService {\n\n_apiBase = 'https://swapi.dev/api';\n\n    getResource = async(url) => {\n       \n    const res = await fetch(`${this._apiBase}${url}`);\n   \n    if (!res.ok) {\n        throw new Error(`Could not fetch ${url}` + `, received ${res.status}`\n        )}\n        return await res.json(); \n}\n\n    getAllPeople = async () => {\n       const res = await this.getResource(`/people/`);\n       return res.results.map(this._transformPerson)\n    }\n    getPerson = async(id) => {\n       const person = await this.getResource(`/people/${id}/`);\n       return this._transformPerson(person);\n    }\n\n    getAllPlanets = async() => {\n       const res = await this.getResource(`/planets/`);\n       return res.results.map(this._transformPlanet);\n    }\n    getPlanet = async(id) => {\n       const planet = await this.getResource(`/planets/${id}/`);\n       return this._transformPlanet(planet)\n    }\n\n    getAllStarships = async() => {\n       const res = await this.getResource(`/starships/`);\n       return res.results.map(this._transformStarship);\n    }\n    getStarship = async(id) => {\n        const starship = this.getResource(`/starships/${id}/`);\n        return this._transformStarship(starship);\n    }\n\n    _extractId = (planet) => {\n\n        const idRegExp = /\\/([0-9]*)\\/$/;\n        const id = planet.url.match(idRegExp)[1];\n    }\n\n    _transformPlanet = (planet) => {\n        \n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter \n        }\n    }\n\n    _transformStarship = (starship) => {\n            return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.costInCredits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargoCapacity\n        }\n    }\n\n    _transformPerson = (person) => {\n            return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birthYear,\n            eyeColor: person.eyeColor,\n        }\n    }\n}\n\nconst swapi = new SwapiService();\n\nswapi.getPerson(3).then((p) => {\n    \n        console.log(p.name);\n})\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}