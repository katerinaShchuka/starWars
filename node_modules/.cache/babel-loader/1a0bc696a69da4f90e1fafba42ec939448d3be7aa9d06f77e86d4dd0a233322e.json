{"ast":null,"code":"var _jsxFileName = \"/Users/katerina/starWars/src/components/random-planet/random-planet.js\";\nimport React, { Component } from 'react';\nimport './random-planet.css';\nimport SwapiService from '../services/swapi-service';\nimport Spinner from '../spinner/spinner';\nimport ErrorIndicator from '../error-indicator/error-indicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RandomPlanet extends Component {\n  constructor() {\n    super(...arguments);\n    this.swapiService = new SwapiService();\n    this.state = {\n      planet: {},\n      loading: true\n    };\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        planet,\n        loading: false,\n        error: false\n      });\n    };\n    this.onError = err => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n    this.updatePlanet = () => {\n      const id = Math.floor(Math.random() * 17) + 2;\n      this.swapiService.getPlanet(id).then(this.onPlanetLoaded).catch(this.onError);\n    };\n  }\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 10000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    const {\n      planet,\n      loading,\n      error\n    } = this.state;\n    const hasData = !(loading || error);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 34\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }, this) : null;\n    const content = hasData ? /*#__PURE__*/_jsxDEV(PlanetView, {\n      planet: planet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 31\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-planet jumbotron rounded\",\n      children: [errorMassage, spinner, content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n}\nconst PlanetView = _ref => {\n  let {\n    planet\n  } = _ref;\n  const {\n    id,\n    name,\n    population,\n    rotationPeriod,\n    diameter\n  } = planet;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"planet-image\",\n      src: `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`,\n      alt: \"planet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"term\",\n            children: \"Population\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: population\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"term\",\n            children: \"Rotation Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: rotationPeriod\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"term\",\n            children: \"Diametr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: diameter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_c = PlanetView;\nvar _c;\n$RefreshReg$(_c, \"PlanetView\");","map":{"version":3,"names":["React","Component","SwapiService","Spinner","ErrorIndicator","RandomPlanet","swapiService","state","planet","loading","onPlanetLoaded","setState","error","onError","err","updatePlanet","id","Math","floor","random","getPlanet","then","catch","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","hasData","errorMessage","spinner","content","errorMassage","PlanetView","name","population","rotationPeriod","diameter"],"sources":["/Users/katerina/starWars/src/components/random-planet/random-planet.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './random-planet.css';\nimport SwapiService from '../services/swapi-service';\nimport Spinner from '../spinner/spinner';\nimport ErrorIndicator from '../error-indicator/error-indicator';\n\nexport default class RandomPlanet extends Component {\n\n    swapiService = new SwapiService()\n\nstate = {\n    planet: {},\n    loading: true,\n}\n\ncomponentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 10000)\n}\n\ncomponentWillUnmount() {\n    clearInterval(this.interval);\n}\n\nonPlanetLoaded = (planet) => {\n    this.setState({\n        planet,\n        loading: false,\n        error: false,\n    }) \n}\n\nonError = (err) => {\n    this.setState({\n        error: true,\n        loading: false,\n    })\n}\n\nupdatePlanet = () => {\n    \n    const id = Math.floor(Math.random() * 17) + 2;\n    this.swapiService.getPlanet(id)\n    .then(this.onPlanetLoaded)\n    .catch(this.onError)\n} \n\nrender() {\n\n    const { planet, loading, error } = this.state\n\n    const hasData = !(loading || error);\n    const errorMessage = error ? <ErrorIndicator /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = hasData ? <PlanetView planet={planet}/> : null;\n   \n    return (\n        <div className=\"random-planet jumbotron rounded\">\n            {errorMassage}\n            {spinner}\n            {content}\n        </div>\n        \n    )\n}\n}\n\nconst PlanetView = ({planet}) => {\n\n     const { id, name, population, rotationPeriod, diameter } = planet;\n\n    return (\n        <React.Fragment>\n            <img className=\"planet-image\"\n            src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n            alt=\"planet\" />\n        <div>\n            <h4>{name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\">\n                    <span className=\"term\">Population</span>\n                    <span>{population}</span>\n                </li>\n                <li className=\"list-group-item\">\n                    <span className=\"term\">Rotation Period</span>\n                    <span>{rotationPeriod}</span>\n                </li>\n                <li className=\"list-group-item\">\n                    <span className=\"term\">Diametr</span>\n                    <span>{diameter}</span>\n                </li>\n            </ul>\n        </div> \n        </React.Fragment>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}